// // Returns a reference to the element by its ID.
// document.getElementById("someId");

// // Returns an array-like object of all child elements which have all of the given class names.
// document.getElementsByClassName("someClass");

// // Returns an HTMLCollection of elements with the given tag name.
// document.getElementsByTagName("li");

// // Returns the first element within the document that matches the specified group of selectors.
// document.querySelector(".someClass");
// document.querySelector("#someId");

// // Returns a list of the elements within the document (using depth-first pre-order traversal of the document's nodes)
// // that match the specified group of selectors.
// document.querySelectorAll("div.note, div.alert");




// // Get child nodes
// var stored = document.getElementById("someId");
// var children = stored.childNodes;

// // Get parent node
// var parental = children.parentNode;

// myElement.children;
// myElement.firstElementChild;
// myElement.lastElementChild;
// myElement.previousElementSibling;
// myElement.nextElementSibling;


// myElement.childNodes;
// myElement.firstChild;
// myElement.lastChild;
// myElement.previousSibling;
// myElement.nextSibling;
// myElement.parentNode;
// myElement.parentElement;




// // create new elements
// var newHeading = document.createElement("h1");
// var newParagraph = document.createElement("p");

// // create text nodes for new elements
// var h1Text = document.createTextNode("This is a nice header text!");
// var pText = document.createTextNode("This is a nice paragraph text!");

// // attach new text nodes to new elements
// newHeading.appendChild(h1Text);
// newParagraph.appendChild(pText);

// // elements are now created and ready to be added to the DOM.



// // grab element on page you want to add stuff to
// var firstHeading = document.querySelector("#firstHeading");

// // add both new elements to the page as children to the element we stored in firstHeading.
// firstHeading.appendChild(newHeading);
// firstHeading.appendChild(newParagraph);

// // can also insert before like so

// // get parent node of firstHeading
// var parent = firstHeading.parentNode;

// // insert newHeading before FirstHeading
// parent.insertBefore(newHeading, firstHeading);



// // grab element on page you want to use
// var firstHeading = document.querySelector("#firstHeading");

// // will remove foo if it is a class of firstHeading
// firstHeading.classList.remove("foo");

// // will add the class 'anotherClass' if one does not already exist
// firstHeading.classList.add("anotherClass");

// // add or remove multiple classes
// firstHeading.classList.add("foo", "bar");
// firstHeading.classList.remove("foo", "bar");

// // if visible class is set remove it, otherwise add it
// firstHeading.classList.toggle("visible");

// // will return true if it has class of 'foo' or false if it does not
// firstHeading.classList.contains("foo");




// // Get an attribute value
// const value = myElement.value;

// // Set an attribute as an element property
// myElement.value = "foo";

// // Set multiple properties using Object.assign()
// Object.assign(myElement, {
//   value: "foo",
//   id: "bar"
// });

// // Remove an attribute
// myElement.value = null;





// myElement.addEventListener("click", function(event) {
//     console.log(event.type + " got fired");
//   });
  
//   myElement.addEventListener("click", function(event) {
//     console.log(event.type + " got fired again");
//   });




//   // The `forms` property of the document is an array holding
// // references to all forms
// const myForm = document.forms[0];
// const myInputElements = myForm.querySelectorAll("input");

// Array.from(myInputElements).forEach(el => {
//   el.addEventListener("change", function(event) {
//     console.log(event.target.value);
//   });
// });